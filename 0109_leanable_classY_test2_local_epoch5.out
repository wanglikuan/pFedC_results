================================================================================
Summary of training process:
Algorithm: pFedC
Batch size: 32
Learing rate       : 0.01
Ensemble learing rate       : 0.0001
Average Moving       : 1.0
Subset of users      : 20
Number of global rounds       : 200
Number of local rounds       : 5
Dataset       : Mnist-mtl-class2
Local Model       : cnn
Device            : cuda
================================================================================


         [ Start training iteration 0 ]           


Users in total: 20
Number of users / total users: 20  /  20
Finished creating pFedC server.
All users are selected
client No.: 0
client No.: 1
client No.: 2
client No.: 3
client No.: 4
client No.: 5
client No.: 6
client No.: 7
client No.: 8
client No.: 9
client No.: 10
client No.: 11
client No.: 12
client No.: 13
client No.: 14
client No.: 15
client No.: 16
client No.: 17
client No.: 18
client No.: 19
before gumbel_softmax:  & after update masks:   glob_iter: 0   input_P: {0: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 1: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 2: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 3: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 4: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 5: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 6: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 7: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 8: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 9: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>)}   output_Y: {0: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 1: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 2: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 3: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 4: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 5: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 6: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 7: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 8: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True), 9: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       requires_grad=True)}
after gumbel_softmax & before update masks:   glob_iter: 0   input_P: {0: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 1: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 2: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 3: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 4: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 5: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 6: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 7: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 8: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>), 9: tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>)}   output_Y: {0: tensor([0., 1., 0., 1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 1.], grad_fn=<CopySlices>), 1: tensor([0., 0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 1., 0.,
        1., 1.], grad_fn=<CopySlices>), 2: tensor([0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
        1., 1.], grad_fn=<CopySlices>), 3: tensor([0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 0.,
        1., 1.], grad_fn=<CopySlices>), 4: tensor([0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 1., 1., 0., 0.,
        0., 0.], grad_fn=<CopySlices>), 5: tensor([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 0.,
        0., 0.], grad_fn=<CopySlices>), 6: tensor([0., 0., 1., 0., 1., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 0., 0., 0.,
        0., 1.], grad_fn=<CopySlices>), 7: tensor([1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 1.], grad_fn=<CopySlices>), 8: tensor([0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 1.], grad_fn=<CopySlices>), 9: tensor([1., 0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.,
        1., 1.], grad_fn=<CopySlices>)}
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
client 0 id  1  = 0
client 0 id  2  = 0
client 0 id  3  = 0
client 0 id  4  = 0
client 0 id  5  = 0
client 0 id  6  = 1
client 0 id  7  = 0
client 0 id  8  = 1
client 0 id  9  = 0
client 0 id  10  = 1
All users are selected
client No.: 0
client No.: 1
client No.: 2
client No.: 3
client No.: 4
client No.: 5
client No.: 6
client No.: 7
client No.: 8
client No.: 9
client No.: 10
client No.: 11
client No.: 12
client No.: 13
client No.: 14
client No.: 15
client No.: 16
client No.: 17
client No.: 18
client No.: 19
id:  1
origin_state_list[0]:  tensor([[-1.4662,  0.1379, -1.8568,  ..., -1.7022, -1.6997, -2.2304],
        [ 1.1028,  0.5020,  1.1858,  ...,  1.4323,  1.7786, -2.3025],
        [-1.3040,  1.4084, -1.0269,  ..., -0.5608,  2.2869,  0.4036],
        ...,
        [ 0.3809,  0.5373, -2.5407,  ..., -1.1610, -1.4000, -1.0563],
        [ 1.7595, -1.0356,  0.5707,  ...,  2.1323,  2.1597,  1.8927],
        [-1.7191, -1.5610,  2.0867,  ...,  0.2212, -2.0784,  0.8226]],
       device='cuda:0')
delta_attention_theta_list[0]:  tensor([[-1.3916,  0.1316, -1.7649,  ..., -1.6135, -1.6177, -2.1171],
        [ 1.0460,  0.4761,  1.1277,  ...,  1.3560,  1.6935, -2.1895],
        [-1.2369,  1.3388, -0.9769,  ..., -0.5275,  2.1682,  0.3859],
        ...,
        [ 0.3629,  0.5109, -2.4144,  ..., -1.0999, -1.3324, -1.0021],
        [ 1.6710, -0.9841,  0.5425,  ...,  2.0244,  2.0528,  1.7974],
        [-1.6336, -1.4831,  1.9826,  ...,  0.2091, -1.9737,  0.7810]],
       device='cuda:0')
self.input_P[id-1]:  tensor([[0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0', grad_fn=<CopyBackwards>)
-------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
-------------------------------------------------------
